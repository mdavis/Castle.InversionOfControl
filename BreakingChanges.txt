================================================================================================
change - Assembly Castle.MicroKernel.dll was merged into Castle.Windsor.dll

impact - high
fixability - easy
revision - 730b202b0ed23a6b42258a6ffd6a3e63f89501fc

description - Since vast majority of users used Windsor, as opposed to bare MicroKernel it was
	decided it didn't make sense to maintain two containers. As result of that their assemblies
	were merged, as first step of integration between Windsor and MicroKernel.

fix - In your projects remove reference to Castle.MicroKernel.dll. If you weren't using Windsor
	add reference to Castle.Windsor.dll
	In all places where your were referencing types from Castle.MicroKernel.dll via string
	(like xml configuration when registering facilities, or <httpModules> section on your 
	web.config) update references from Castle.MicroKernel to Castle.Windsor.

================================================================================================
change - ComponentRegistration<S>.Startable public method has been removed.
	ComponentRegistration<S>.StartUsingMethod public method was moved to extension method.
	ComponentRegistration<S>.StopUsingMethod public method was moved to extension method.

impact - low
fixability - trivial
revision - 6710

description - StartUsingMethod/StopUsingMethod belong to StartableFacility and do not make sense
	as part of generic API. Startable method was superfluous.

fix - Remove calls to Startable(). Import namespace Castle.Facilities.Startable to use
	StartUsingMethod and StopUsingMethod as extension methods.

================================================================================================
change - DefaultProxyFactory.CreateProxyGenerationOptionsFrom protected method  and
	DefaultProxyFactory.CustomizeProxy protected virtual method have changed signature

impact - very low
fixability - easy
revision - 6691

description - the methods now also takes IKernel and CreationContext, to be used by IReferences
	to do resolution of components they reference

fix - pass required parameters to the methods.

================================================================================================
change - ProxyOption's properties changed types: 
	Selector, from IInterceptorSelector to IReference<IInterceptorSelector>
	Hook from IProxyHook to IReference<IProxyHook>
	MixIns from object[] to IEnumerable<IReference<object>>

impact - very low
fixability - easy
revision - 6691

description - the properties now use IReferences instead of live objects to allow for
	resolution of their values from the container, as required in case of usage from xml.

fix - wherever used, adjust types appropriately. To obtain actual objects, use Resolve method.